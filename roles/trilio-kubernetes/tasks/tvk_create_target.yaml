# Set of tasks for creating a Trilio for Kubernetes Target in a namespace
# for storing backups
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Namespace
  ansible.builtin.include_tasks: tvk_create_ns.yaml
  when: tvk_namespace | bool
  tags: ['namespace', 'smoketest', 'create_target']

- name: Create Secret for S3
  block:
  # Create a secret using file stored locally
  - name: Configure the secret yaml
    template:
      src: templates/secrets.yaml.j2
      dest: /tmp/secrets.yaml
      mode: 0600
    register: k8s_secret

  - name: Create the secret used by the S3 target in the {{ tvk_namespace }} namespace
    kubernetes.core.k8s:
      state: present # State=present when you need to create new object
      namespace: "{{ tvk_namespace }}" # namespace for the secret
      validate_certs: false
      src: /tmp/secrets.yaml
    register: secret
    when: k8s_secret.changed

  - name: Remove temporary secret yaml
    ansible.builtin.file:
      path: /tmp/secrets.yaml
      state: absent
  tags: ['secret', 'smoketest']
  when: tvk_target_type | lower == "s3"

- name: Create Target
  block:
  # Create a target yaml locally
  - name: Configure the target yaml
    template:
      src: templates/target.yaml.j2
      dest: /tmp/target.yaml

  - name: Create the "{{ tvk_target_name }}" target in the {{ tvk_namespace }} namespace
    kubernetes.core.k8s:
      state: present # State=present when you need to create new object
      namespace: "{{ tvk_namespace }}" # defining the namespace
      src: "/tmp/target.yaml"
      validate_certs: false
    register: target

  # TODO: if not using kubeconfig auth, how to do kubectl?
  - name: Wait for "{{ tvk_target_name }}" target to be created in the {{ tvk_namespace }} namespace (kubeconfig)
    shell: >
      kubectl get targets/"{{ tvk_target_name }}" -n {{ tvk_namespace }}
    environment:
      KUBECONFIG: "{{ kubeconfig }}"
    register: target_available
    retries: 5
    delay: 5
    until: target_available.stdout.find("Available") != -1
    ignore_errors: true
    when:
    - k8s_auth_type == "kubeconfig"

  - name: Wait for "{{ tvk_target_name }}" target to be created in the {{ tvk_namespace }} namespace (token)
    shell: |
      oc login "{{ k8s_auth_api }} " --token="{{ openshift_auth_results.openshift_auth.api_key }}" --insecure-skip-tls-verify=true
      oc get targets/"{{ tvk_target_name }}" -n {{ tvk_namespace }}
    register: target_available
    retries: 5
    delay: 10
    until: target_available.stdout.find("Available") != -1
    ignore_errors: true
    when:
    - k8s_auth_type == "password"
    - k8s_distro == "openshift"
  when: tvk_target_type | lower == "s3" # only s3 for now, template will have logic
  tags: ['target', 'smoketest']

- debug:
    var: target_available.stdout_lines
