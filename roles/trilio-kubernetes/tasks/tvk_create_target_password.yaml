# Set of tasks for creating a Trilio for Kubernetes Target in a namespace
# for storing backups (password auth)
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Target
  block:
  # Create a target yaml locally
  - name: Configure the target yaml
    template:
      src: templates/target.yaml.j2
      dest: /tmp/target.yaml

  - name: Create the "{{ tvk_target_name }}" target in the {{ tvk_namespace }} namespace
    kubernetes.core.k8s:
      api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
      kind: Target
      state: present # State=present when you need to create new object
      namespace: "{{ tvk_namespace }}" # defining the namespace
      src: "/tmp/target.yaml"
      validate_certs: false
    register: target
    when: k8s_auth_type == 'password'

  - name: Wait for "{{ tvk_target_name }}" target to be created in the {{ tvk_namespace }} namespace
    shell: |
      oc login "{{ k8s_auth_api }}" --token="{{ openshift_auth_results.openshift_auth.api_key }}" --insecure-skip-tls-verify=true
      oc get targets/"{{ tvk_target_name }}" -n {{ tvk_namespace }}
    register: target_available
    retries: 5
    delay: 10
    until: target_available.stdout.find("Available") != -1
    ignore_errors: true
    when:
    - k8s_auth_type == "password"
    - k8s_distro == "openshift"
  when: tvk_target_type | lower == "s3" # only s3 for now, template will have logic
  tags: ['target', 'smoketest', 'migrate']

- debug:
    var: target_available.stdout_lines
